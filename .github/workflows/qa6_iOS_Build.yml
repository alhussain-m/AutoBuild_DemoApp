name: Build iOS IPA (Manual Signing)

on:
  push:
    branches: [main]

env:
  # Your project details
  TEAM_ID: "8LE2DAQG25"
  BUNDLE_ID: "com.citus.stage"
  PROVISIONING_PROFILE_SPECIFIER: "CitusHealth Stage Provisioning"
  SCHEME_NAME: "App"  # Change if your scheme is different
  CONFIGURATION: "Release"
  EXPORT_METHOD: "app-store"  # Change to "development" for dev builds
  
  # Keychain settings
  KEYCHAIN_NAME: "build.keychain-db"
  KEYCHAIN_PASSWORD: "citrus"  # Can be any random string

jobs:
  build-ios:
    runs-on: macos-latest
    env:
      BUILD_ENV: "qa6"
      VERSION_SUFFIX: "-beta.${{ github.run_number }}"
 
    steps:
      - uses: actions/checkout@v4
 
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          scope: '@resmed'
          registry-url: 'https://npm.pkg.github.com'
 
      - name: Install dependencies
        run: npm install --force

      # 1. Create temporary keychain
      - name: Create temporary keychain
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security list-keychains -s "$KEYCHAIN_NAME"
          security default-keychain -s "$KEYCHAIN_NAME"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security set-keychain-settings -t 3600 -u "$KEYCHAIN_NAME"

      # 2. Import certificate
      - name: Import certificate
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}  # Changed from IOS_PROVISIONING_PROFILE_BASE64
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          echo "$BUILD_CERTIFICATE_BASE64" | base64 --decode > 13-6cert.p12
          security import 13-6cert.p12 \
            -k "$KEYCHAIN_NAME" \
            -P "$P12_PASSWORD" \
            -T /usr/bin/codesign \
            -T /usr/bin/security
          rm -f 13-6cert.p12
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          echo "Installed identities:"
          security find-identity -v -p codesigning "$KEYCHAIN_NAME"

      # 3. Install provisioning profile
      - name: Install provisioning profile
        env:
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
          PROFILE_UUID=$(/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< $(security cms -D -i ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision))
          echo "PROFILE_UUID=${PROFILE_UUID}" >> $GITHUB_ENV

      # 4. Build with manual signing
      - name: Build archive
        run: |
          xcodebuild archive \
            -workspace ios/App/App.xcworkspace \
            -scheme "$SCHEME_NAME" \
            -configuration "$CONFIGURATION" \
            -archivePath build/$SCHEME_NAME.xcarchive \
            -destination generic/platform=iOS \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="Apple Distribution: Citus Health, Inc. (8LE2DAQG25)" \
            PROVISIONING_PROFILE_SPECIFIER="$PROVISIONING_PROFILE_SPECIFIER" \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            OTHER_CODE_SIGN_FLAGS="--keychain $KEYCHAIN_NAME"

      # 5. Export IPA
      - name: Export IPA
        run: |
          cat <<EOF > ExportOptions.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>$EXPORT_METHOD</string>
              <key>teamID</key>
              <string>$TEAM_ID</string>
              <key>provisioningProfiles</key>
              <dict>
                  <key>$BUNDLE_ID</key>
                  <string>$PROVISIONING_PROFILE_SPECIFIER</string>
              </dict>
          </dict>
          </plist>
          EOF

          xcodebuild -exportArchive \
            -archivePath build/$SCHEME_NAME.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath build \
            -allowProvisioningUpdates

      # 6. Upload artifact
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: App-${{ github.run_number }}.ipa
          path: build/$SCHEME_NAME.ipa
          retention-days: 7

      # 7. Cleanup
      - name: Delete temporary keychain
        if: always()
        run: security delete-keychain "$KEYCHAIN_NAME"