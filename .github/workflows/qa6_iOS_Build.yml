name: Ionic iOS Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  BUILD_ENV: qa6
  BUNDLE_ID: com.citus.stage
  TEAM_ID: 8LE2DAQG25

jobs:
  build-ios:
    runs-on: macos-latest
    steps:
      # Initial setup
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Ionic/Capacitor setup
      - name: Install Ionic CLI
        run: npm install -g @ionic/cli

      - name: Install dependencies
        run: npm ci

      - name: Build web assets
        run: |
          ionic build --configuration=${{ env.BUILD_ENV }}
          npx cap sync ios

      # CocoaPods setup (fixed)
      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: |
            ios/App/Pods
            ~/.cocoapods/repos
          key: pods-${{ hashFiles('ios/App/Podfile.lock') }}
          restore-keys: |
            pods-

      - name: Set up CocoaPods environment
        run: |
          sudo gem install cocoapods -v 1.16.2
          pod repo update

      - name: Install Pods
        working-directory: ./ios/App
        run: pod install --repo-update

      # Code signing setup
      - name: Set up code signing
        env:
          P12_BASE64: ${{ secrets.IOS_DISTRIBUTION_CERT }}
          P12_PASSWORD: ${{ secrets.IOS_CERT_PASSWORD }}
          PROVISIONING_PROFILE: ${{ secrets.IOS_DISTRIBUTION_PROFILE }}
        run: |
          # Create keychain
          security create-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain

          # Import certificate
          echo "$P12_BASE64" | base64 --decode > cert.p12
          security import cert.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          rm cert.p12

          # Install provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$PROVISIONING_PROFILE" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      # Xcode build
      - name: Build iOS app
        run: |
          cd ios/App
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -configuration Release \
            -sdk iphoneos \
            -archivePath build/App.xcarchive \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM="${{ env.TEAM_ID }}" \
            PRODUCT_BUNDLE_IDENTIFIER="${{ env.BUNDLE_ID }}" \
            CODE_SIGN_IDENTITY="iPhone Distribution" \
            CODE_SIGN_STYLE="Manual" \
            PROVISIONING_PROFILE_SPECIFIER="CitusHealth Stage Provisioning" \
            archive

      # Export IPA
      - name: Export IPA
        run: |
          cd ios/App
          xcodebuild -exportArchive \
            -archivePath build/App.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath build \
            -allowProvisioningUpdates

      # Artifacts
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ env.BUILD_ENV }}
          path: ios/App/build/*.ipa
          retention-days: 7

      # Cleanup
      - name: Clean up keychain
        if: always()
        run: |
          security delete-keychain build.keychain