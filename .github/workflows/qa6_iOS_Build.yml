name: Build iOS IPA

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-ios:
    name: Build iOS IPA
    runs-on: macos-latest
    env:
      BUILD_ENV: "qa6"
      VERSION_SUFFIX: "-beta.${{ github.run_number }}"
      TEAM_ID: "8LE2DAQG25"
      BUNDLE_ID: "com.citus.stage"
      KEYCHAIN_NAME: temp-build.keychain
      KEYCHAIN_PASSWORD: "123"
      PROVISIONING_PROFILE_SPECIFIER: "CitusHealth Stage Provisioning"
      SCHEME_NAME: "App"
      CONFIGURATION: "Release"
      EXPORT_METHOD: "app-store"

    steps:
      - name: Check Xcode version
        run: xcodebuild -version

      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build iOS project
        run: |
          npm run build -- --configuration=$BUILD_ENV
          npx cap sync ios

      - name: Install CocoaPods dependencies
        run: |
          cd ios/App
          pod install --repo-update

      - name: Create and configure keychain
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security list-keychains -s "$KEYCHAIN_NAME"
          security default-keychain -s "$KEYCHAIN_NAME"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security set-keychain-settings -t 3600 -u "$KEYCHAIN_NAME"

      - name: Import signing certificate
        run: |
          echo "${{ secrets.IOS_CERT_P12 }}" | base64 --decode > ios_25-5.p12
          security import ios_25-5.p12 \
            -k "$KEYCHAIN_NAME" \
            -P "${{ secrets.IOS_CERT_PASSWORD }}" \
            -T /usr/bin/codesign \
            -T /usr/bin/security \
            -A
          rm -f ios_25-5.p12
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security find-identity -v -p codesigning "$KEYCHAIN_NAME"

      - name: Install provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
          PROFILE_UUID=$(/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< $(security cms -D -i ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision))
          echo "PROFILE_UUID=${PROFILE_UUID}" >> $GITHUB_ENV

      - name: Generate Export Options Plist
        run: |
          cat <<EOF > ios/App/ExportOptions.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>$EXPORT_METHOD</string>
              <key>teamID</key>
              <string>$TEAM_ID</string>
              <key>provisioningProfiles</key>
              <dict>
                  <key>$BUNDLE_ID</key>
                  <string>$PROVISIONING_PROFILE_SPECIFIER</string>
              </dict>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
          </dict>
          </plist>
          EOF

      - name: Build and archive
        run: |
          cd ios/App
          xcodebuild archive \
            -workspace App.xcworkspace \
            -scheme "$SCHEME_NAME" \
            -configuration "$CONFIGURATION" \
            -archivePath build/$SCHEME_NAME.xcarchive \
            -destination generic/platform=iOS \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="iPhone Distribution" \
            PROVISIONING_PROFILE_SPECIFIER="$PROVISIONING_PROFILE_SPECIFIER" \
            PROVISIONING_PROFILE="$PROFILE_UUID" \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            OTHER_CODE_SIGN_FLAGS="--keychain $KEYCHAIN_NAME"

      - name: Export IPA
        run: |
          cd ios/App
          xcodebuild -exportArchive \
            -archivePath build/$SCHEME_NAME.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath build \
            -exportArchive \
            -allowProvisioningUpdates

      - name: Upload iOS IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-$BUILD_ENV-${{ env.VERSION_SUFFIX }}.ipa
          path: ios/App/build/$SCHEME_NAME.ipa
          retention-days: 7

      - name: Cleanup keychain
        if: always()
        run: security delete-keychain "$KEYCHAIN_NAME"